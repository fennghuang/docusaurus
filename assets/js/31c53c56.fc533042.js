"use strict";(self.webpackChunkwechaty_docusaurus=self.webpackChunkwechaty_docusaurus||[]).push([[2057],{3905:(e,a,t)=>{t.d(a,{Zo:()=>m,kt:()=>v});var l=t(67294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,l)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function r(e,a){if(null==e)return{};var t,l,n=function(e,a){if(null==e)return{};var t,l,n={},o=Object.keys(e);for(l=0;l<o.length;l++)t=o[l],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)t=o[l],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var u=l.createContext({}),p=function(e){var a=l.useContext(u),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},m=function(e){var a=p(e.components);return l.createElement(u.Provider,{value:a},e.children)},c="mdxType",i={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},d=l.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),c=p(t),d=n,v=c["".concat(u,".").concat(d)]||c[d]||i[d]||o;return t?l.createElement(v,s(s({ref:a},m),{},{components:t})):l.createElement(v,s({ref:a},m))}));function v(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=d;var r={};for(var u in a)hasOwnProperty.call(a,u)&&(r[u]=a[u]);r.originalType=e,r[c]="string"==typeof e?e:n,s[1]=r;for(var p=2;p<o;p++)s[p]=t[p];return l.createElement.apply(null,s)}return l.createElement.apply(null,t)}d.displayName="MDXCreateElement"},85162:(e,a,t)=>{t.d(a,{Z:()=>s});var l=t(67294),n=t(86010);const o="tabItem_Ymn6";function s(e){let{children:a,hidden:t,className:s}=e;return l.createElement("div",{role:"tabpanel",className:(0,n.Z)(o,s),hidden:t},a)}},65488:(e,a,t)=>{t.d(a,{Z:()=>d});var l=t(87462),n=t(67294),o=t(86010),s=t(72389),r=t(67392),u=t(7094),p=t(12466);const m="tabList__CuJ",c="tabItem_LNqP";function i(e){const{lazy:a,block:t,defaultValue:s,values:i,groupId:d,className:v}=e,g=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=i??g.map((e=>{let{props:{value:a,label:t,attributes:l}}=e;return{value:a,label:t,attributes:l}})),k=(0,r.l)(y,((e,a)=>e.value===a.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const T=null===s?s:s??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==T&&!y.some((e=>e.value===T)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${T}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:h}=(0,u.U)(),[N,O]=(0,n.useState)(T),f=[],{blockElementScrollPositionUntilNextRender:w}=(0,p.o5)();if(null!=d){const e=b[d];null!=e&&e!==N&&y.some((a=>a.value===e))&&O(e)}const P=e=>{const a=e.currentTarget,t=f.indexOf(a),l=y[t].value;l!==N&&(w(a),O(l),null!=d&&h(d,String(l)))},R=e=>{let a=null;switch(e.key){case"Enter":P(e);break;case"ArrowRight":{const t=f.indexOf(e.currentTarget)+1;a=f[t]??f[0];break}case"ArrowLeft":{const t=f.indexOf(e.currentTarget)-1;a=f[t]??f[f.length-1];break}}a?.focus()};return n.createElement("div",{className:(0,o.Z)("tabs-container",m)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},v)},y.map((e=>{let{value:a,label:t,attributes:s}=e;return n.createElement("li",(0,l.Z)({role:"tab",tabIndex:N===a?0:-1,"aria-selected":N===a,key:a,ref:e=>f.push(e),onKeyDown:R,onClick:P},s,{className:(0,o.Z)("tabs__item",c,s?.className,{"tabs__item--active":N===a})}),t??a)}))),a?(0,n.cloneElement)(g.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},g.map(((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==N})))))}function d(e){const a=(0,s.Z)();return n.createElement(i,(0,l.Z)({key:String(a)},e))}},45502:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>m,contentTitle:()=>u,default:()=>d,frontMatter:()=>r,metadata:()=>p,toc:()=>c});var l=t(87462),n=(t(67294),t(3905)),o=t(65488),s=t(85162);const r={title:"Listen to events"},u=void 0,p={unversionedId:"howto/degraded/degraded-event",id:"howto/degraded/degraded-event",title:"Listen to events",description:"The Wechaty Events are all the same acrossing Polyglot Wechaty programs!",source:"@site/docs/howto/degraded/degraded-event.md",sourceDirName:"howto/degraded",slug:"/howto/degraded/degraded-event",permalink:"/docs/howto/degraded/degraded-event",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/howto/degraded/degraded-event.md",tags:[],version:"current",lastUpdatedBy:"Abhishek Jaiswal",lastUpdatedAt:1634707553,formattedLastUpdatedAt:"Oct 20, 2021",frontMatter:{title:"Listen to events"}},m={},c=[{value:"Basic Events",id:"basic-events",level:2},{value:"<code>scan</code> Event: QR code",id:"scan-event-qr-code",level:3},{value:"<code>login</code> Event: bot contact",id:"login-event-bot-contact",level:3},{value:"<code>logout</code> Event",id:"logout-event",level:3},{value:"<code>message</code> Event",id:"message-event",level:3},{value:"<code>friendship</code> Event: friend requests",id:"friendship-event-friend-requests",level:3},{value:"Room Events",id:"room-events",level:2},{value:"<code>room-topic</code> Event: messages",id:"room-topic-event-messages",level:3},{value:"<code>room-invite</code> Event: messages",id:"room-invite-event-messages",level:3},{value:"<code>room-join</code> Event: messages",id:"room-join-event-messages",level:3},{value:"<code>room-leave</code> Event: messages",id:"room-leave-event-messages",level:3},{value:"System events",id:"system-events",level:2},{value:"<code>ready</code> Event",id:"ready-event",level:3},{value:"<code>heartbeat</code> Event: messages",id:"heartbeat-event-messages",level:3},{value:"<code>error</code> Event",id:"error-event",level:3}],i={toc:c};function d(e){let{components:a,...t}=e;return(0,n.kt)("wrapper",(0,l.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"The Wechaty Events are all the same acrossing Polyglot Wechaty programs!")),(0,n.kt)("h2",{id:"basic-events"},"Basic Events"),(0,n.kt)("h3",{id:"scan-event-qr-code"},(0,n.kt)("inlineCode",{parentName:"h3"},"scan")," Event: QR code"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"scan")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import { ScanStatus } from 'wechaty'\n\nasync function onScan (\n  qrcode: undefined | string,\n  status: ScanStatus,\n) {\n  console.info('Scan QR Code to login, status:', status, ScanStatus[status])\n  console.info('https://wechaty.js.org/qrcode/' + encodeURIComponent(qrcode))\n}\n\nbot.on('scan', onScan)\nawait bot.start()\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const { ScanStatus } = require('wechaty')\n\nasync function onScan (\n  qrcode,\n  status,\n) {\n  console.info('Scan QR Code to login, status:', status, ScanStatus[status])\n  console.info('https://wechaty.js.org/qrcode/' + encodeURIComponent(qrcode))\n}\n\nbot.on('scan', onScan)\nawait bot.start()\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, ScanStatus\nfrom typing import Optional\nimport asyncio\n\n# method one\ndef on_scan (qrcode, status):\n    print('Scan QR Code to login: {}\\n'.format(staus))\n    print('https://wechaty.js.org/qrcode/{}'.format(qrcode))\n\nbot = Wechaty()\nbot.on('scan', on_scan)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_scan(self, qr_code: str, status: ScanStatus, data: Optional[str]):\n        \"\"\"listen scan event\"\"\"\n        print('Scan QR Code to login: {}\\n'.format(staus))\n        print('https://wechaty.js.org/qrcode/{}'.format(qrcode))\n\nasyncio.run(MyBot().start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h3",{id:"login-event-bot-contact"},(0,n.kt)("inlineCode",{parentName:"h3"},"login")," Event: bot contact"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"login")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import { Contact } from 'wechaty'\n\nfunction onLogin (bot: Contact) {\n  console.info('Bot logged in:', bot)\n}\n\nbot.on('login', onLogin)\nawait bot.start()\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"function onLogin (bot) {\n  console.info('Bot logged in:', bot)\n}\n\nbot.on('login', onLogin)\nawait bot.start()\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Contact\nfrom typing import Optional\nimport asyncio\n\n# method one\ndef on_login (contact: Contact):\n  print(f'User {contact} logged in\\n')\n\nbot.on('login', on_login)\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_login(self, contact: Contact):\n        print(f'User {contact} logged in\\n')\n\nasyncio.run(MyBot().start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h3",{id:"logout-event"},(0,n.kt)("inlineCode",{parentName:"h3"},"logout")," Event"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"logout")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Contact\nimport asyncio\n\n# method one\nasync def on_logout(contact: Contact):\n    print(f'User <{contact}> logout')\n\nbot = MyBot()\nbot.on('logout', on_logout)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_logout(self, contact: Contact):\n        print(f'User <{contact}> logout')\n\nasync def start():\n    await MyBot().start()\n\nasyncio.run(start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h3",{id:"message-event"},(0,n.kt)("inlineCode",{parentName:"h3"},"message")," Event"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"message")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"import { Message } from 'wechaty'\n\nfunction onMessage (message: Message) {\n  console.info('New message:', message)\n}\n\nbot.on('message', onMessage)\nawait bot.start()\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"function onMessage (message) {\n  console.info('New message:', message)\n}\n\nbot.on('message', onMessage)\nawait bot.start()\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Message\nimport asyncio\n\n# method one\nasync def on_message(msg: Message):\n    print(f'receive message <{msg}>')\n\nbot = MyBot()\nbot.on('message', on_message)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_message(self, msg: Message):\n        print(f'receive message <{msg}>')\n\nasyncio.run(MyBot().start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h3",{id:"friendship-event-friend-requests"},(0,n.kt)("inlineCode",{parentName:"h3"},"friendship")," Event: friend requests"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"friendship")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Friendship\nimport asyncio\n\n# method one\nasync def on_friendship(friendship: Friendship):\n    print(f'receive friendship<{friendship}> event')\n\nbot = MyBot()\nbot.on('friendship', on_friendship)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_friendship(self, friendship: Friendship):\n        print(f'receive friendship<{friendship}> event')\n\nasyncio.run(MyBot().start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h2",{id:"room-events"},"Room Events"),(0,n.kt)("h3",{id:"room-topic-event-messages"},(0,n.kt)("inlineCode",{parentName:"h3"},"room-topic")," Event: messages"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"room-topic")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Room, Contact\nfrom datetime import datetime\nimport asyncio\n\n# method one\nasync def on_room_topic(room: Room, new_topic: str, old_topic: str, changer: Contact, date: datetime):\n    print(f'receive room topic changed event <from<{new_topic}> to <{old_topic}>> from room<{room}> ')\n\nbot = MyBot()\nbot.on('room-topic', on_room_topic)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_room_topic(self, room: Room, new_topic: str, old_topic: str, changer: Contact, date: datetime):\n        print(f'receive room topic changed event <from<{new_topic}> to <{old_topic}>> from room<{room}> ')\n\nasyncio.run(MyBot().start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h3",{id:"room-invite-event-messages"},(0,n.kt)("inlineCode",{parentName:"h3"},"room-invite")," Event: messages"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"room-invite")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, RoomInvitation\nimport asyncio\n\n\n# method one\nasync def on_room_invite(room_invitation: RoomInvitation):\n    print(f'receive room invitation<{room_invitation}> event')\n\nbot = MyBot()\nbot.on('room-invite', on_room_invite)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_room_invite(self, room_invitation: RoomInvitation):\n        print(f'receive room invitation<{room_invitation}> event')\n\nasyncio.run(MyBot().start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h3",{id:"room-join-event-messages"},(0,n.kt)("inlineCode",{parentName:"h3"},"room-join")," Event: messages"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"room-join")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Contact, Room\nfrom typing import List\nfrom datetime import datetime\nimport asyncio\n\n# method one\nasync def on_room_join(room: Room, invitees: List[Contact], inviter: Contact, date: datetime):\n    print(f'receive room join event from Room<{room}>')\n\nbot = Wechaty()\nbot.on('room-join', on_room_join)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_room_join(self, room: Room, invitees: List[Contact], inviter: Contact, date: datetime):\n        print(f'receive room join event from Room<{room}>')\n\nasyncio.run(MyBot().start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h3",{id:"room-leave-event-messages"},(0,n.kt)("inlineCode",{parentName:"h3"},"room-leave")," Event: messages"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"room-leave")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty, Contact, Room\nfrom typing import List\nfrom datetime import datetime\nimport asyncio\n\n# method one\nasync def on_room_leave(room: Room, leavers: List[Contact], remover: Contact, date: datetime):\n    print(f'receive room leave event from Room<{room}>')\n\nbot = Wechaty()\nbot.on('room-leave', on_room_leave)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_room_leave(self, room: Room, leavers: List[Contact], remover: Contact, date: datetime):\n        print(f'receive room leave event from Room<{room}>')\n\nasyncio.run(MyBot().start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h2",{id:"system-events"},"System events"),(0,n.kt)("h3",{id:"ready-event"},(0,n.kt)("inlineCode",{parentName:"h3"},"ready")," Event"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"ready")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},'from wechaty import Wechaty\nfrom wechaty_puppet import EventReadyPayload\nimport asyncio\n\n# method one\nasync def on_ready(payload: EventReadyPayload):\n    """Any initialization work can be put in here\n\n    Args:\n        payload (EventReadyPayload): ready data\n    """\n    print(f\'receive ready event<{payload}>\')\n\nbot = Wechaty()\nbot.on(\'ready\', on_ready)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_ready(self, payload: EventReadyPayload):\n        """Any initialization work can be put in here\n\n        Args:\n            payload (EventReadyPayload): ready data\n        """\n        print(f\'receive ready event<{payload}>\')\n        \nasyncio.run(MyBot().start())\n'))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h3",{id:"heartbeat-event-messages"},(0,n.kt)("inlineCode",{parentName:"h3"},"heartbeat")," Event: messages"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"heartbeat")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty\nfrom wechaty_puppet import EventHeartbeatPayload\nimport asyncio\n\n# method one\nasync def on_heartbeat(payload: EventHeartbeatPayload):\n    print(f'receive heartbeat event from server <{payload}>')\n\nbot = Wechaty()\nbot.on('heartbeat', on_heartbeat)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_heartbeat(self, payload: EventHeartbeatPayload):\n        print(f'receive heartbeat event from server <{payload}>')\n        \nasyncio.run(MyBot().start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))),(0,n.kt)("h3",{id:"error-event"},(0,n.kt)("inlineCode",{parentName:"h3"},"error")," Event"),(0,n.kt)("p",null,"TODO: introducing ",(0,n.kt)("inlineCode",{parentName:"p"},"error")," event"),(0,n.kt)(o.Z,{groupId:"programming-languages",defaultValue:"ts",values:[{label:"TypeScript",value:"ts"},{label:"JavaScript",value:"js"},{label:"Python",value:"py"},{label:"Go",value:"go"},{label:"Java",value:"java"},{label:"PHP",value:"php"},{label:"Scala",value:"scala"},{label:"C#",value:"csharp"},{label:"Rust",value:"rust"}],mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"ts",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"js",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"py",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"from wechaty import Wechaty\nfrom wechaty_puppet import EventErrorPayload\nimport asyncio\n\n# method one\nasync def on_error(payload: EventErrorPayload):\n    print(f'receive error event<{payload}> from sever')\n\nbot = Wechaty()\nbot.on('error', on_error)\nasyncio.run(bot.start())\n\n# method two (suggested)\nclass MyBot(Wechaty):\n    async def on_error(self, payload: EventErrorPayload):\n        print(f'receive error event<{payload}> from sever')\n        \nasyncio.run(MyBot().start())\n"))),(0,n.kt)(s.Z,{value:"go",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-go"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"java",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-java"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"php",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-php"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"scala",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-scala"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"csharp",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp"},"// TODO: Pull Request is welcome!\n"))),(0,n.kt)(s.Z,{value:"rust",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-rust"},"// TODO: Pull Request is welcome!\n")))))}d.isMDXComponent=!0}}]);