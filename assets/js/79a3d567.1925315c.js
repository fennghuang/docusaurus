"use strict";(self.webpackChunkwechaty_docusaurus=self.webpackChunkwechaty_docusaurus||[]).push([[8169],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>d});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),i=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},s=function(e){var t=i(e.components);return n.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=i(a),h=r,d=u["".concat(c,".").concat(h)]||u[h]||m[h]||o;return a?n.createElement(d,l(l({ref:t},s),{},{components:a})):n.createElement(d,l({ref:t},s))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=h;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p[u]="string"==typeof e?e:r,l[1]=p;for(var i=2;i<o;i++)l[i]=a[i];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(67294),r=a(86010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:a},t)}},65488:(e,t,a)=>{a.d(t,{Z:()=>h});var n=a(87462),r=a(67294),o=a(86010),l=a(72389),p=a(67392),c=a(7094),i=a(12466);const s="tabList__CuJ",u="tabItem_LNqP";function m(e){const{lazy:t,block:a,defaultValue:l,values:m,groupId:h,className:d}=e,k=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=m??k.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),y=(0,p.l)(v,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===l?l:l??k.find((e=>e.props.default))?.props.value??k[0].props.value;if(null!==f&&!v.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:g,setTabGroupChoices:b}=(0,c.U)(),[w,N]=(0,r.useState)(f),M=[],{blockElementScrollPositionUntilNextRender:P}=(0,i.o5)();if(null!=h){const e=g[h];null!=e&&e!==w&&v.some((t=>t.value===e))&&N(e)}const E=e=>{const t=e.currentTarget,a=M.indexOf(t),n=v[a].value;n!==w&&(P(t),N(n),null!=h&&b(h,String(n)))},x=e=>{let t=null;switch(e.key){case"Enter":E(e);break;case"ArrowRight":{const a=M.indexOf(e.currentTarget)+1;t=M[a]??M[0];break}case"ArrowLeft":{const a=M.indexOf(e.currentTarget)-1;t=M[a]??M[M.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",s)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},d)},v.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>M.push(e),onKeyDown:x,onClick:E},l,{className:(0,o.Z)("tabs__item",u,l?.className,{"tabs__item--active":w===t})}),a??t)}))),t?(0,r.cloneElement)(k.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function h(e){const t=(0,l.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},71393:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>p,metadata:()=>i,toc:()=>u});var n=a(87462),r=(a(67294),a(3905)),o=a(65488),l=a(85162);const p={title:"Puppet Provider: Mock",sidebar_label:"Mock"},c=void 0,i={unversionedId:"puppet-providers/mock",id:"puppet-providers/mock",title:"Puppet Provider: Mock",description:"Wechaty Puppet Mock",source:"@site/docs/puppet-providers/mock.md",sourceDirName:"puppet-providers",slug:"/puppet-providers/mock",permalink:"/docs/puppet-providers/mock",draft:!1,editUrl:"https://github.com/wechaty/docusaurus/edit/main/docusaurus/docs/puppet-providers/mock.md",tags:[],version:"current",lastUpdatedBy:"Soumi7",lastUpdatedAt:1630128426,formattedLastUpdatedAt:"Aug 28, 2021",frontMatter:{title:"Puppet Provider: Mock",sidebar_label:"Mock"},sidebar:"docs",previous:{title:"Service",permalink:"/docs/puppet-providers/service"},next:{title:"Puppet Provider: DIY",permalink:"/docs/puppet-providers/diy"}},s={},u=[{value:"Features",id:"features",level:2},{value:"Usage",id:"usage",level:2},{value:"Mocker and Environment",id:"mocker-and-environment",level:2},{value:"API Reference",id:"api-reference",level:2},{value:"Mocker",id:"mocker",level:3},{value:"Helper Utilities",id:"helper-utilities",level:2},{value:"StateSwitch",id:"stateswitch",level:3},{value:"MemoryCard",id:"memorycard",level:3},{value:"Example: unit testing for <code>math_master</code> game",id:"example-unit-testing-for-math_master-game",level:2},{value:"History",id:"history",level:2},{value:"v0.25 (July 13, 2020)",id:"v025-july-13-2020",level:3},{value:"v0.22 (June 4, 2020)",id:"v022-june-4-2020",level:3},{value:"v0.0.1 (Jun 27, 2018)",id:"v001-jun-27-2018",level:3},{value:"Maintainers",id:"maintainers",level:2}],m={toc:u};function h(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"mock"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/Puppet-Mock-blueviolet",alt:"Wechaty Puppet Mock"}))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/wechaty/wechaty-puppet-mock/HEAD/docs/images/mock.png",alt:"Wechaty Puppet Mock"})),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://badge.fury.io/js/wechaty-puppet-mock"},(0,r.kt)("img",{parentName:"a",src:"https://badge.fury.io/js/wechaty-puppet-mock.svg",alt:"NPM Version"})),"\n",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/wechaty-puppet-mock?activeTab=versions"},(0,r.kt)("img",{parentName:"a",src:"https://img.shields.io/npm/v/wechaty-puppet-mock/next.svg",alt:"npm (tag)"}))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Repo: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/wechaty/wechaty-puppet-mock"},"https://github.com/wechaty/wechaty-puppet-mock")),(0,r.kt)("li",{parentName:"ul"},"Support & Feedback: ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/wechaty/wechaty-puppet-mock/issues"},"https://github.com/wechaty/wechaty-puppet-mock/issues"))),(0,r.kt)("h2",{id:"features"},"Features"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Helps to test Wechaty framework with a mock puppet."),(0,r.kt)("li",{parentName:"ol"},"Can be used as a starter template for writing your own puppet provider.")),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"wechaty-puppet-mock"),"."),(0,r.kt)(o.Z,{groupId:"operating-systems",defaultValue:"linux",values:[{label:"Linux",value:"linux"},{label:"macOS",value:"mac"},{label:"Windows",value:"windows"}],mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"linux",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install wechaty-puppet-mock\nexport WECHATY_PUPPET=wechaty-puppet-mock\nnpm start\n"))),(0,r.kt)(l.Z,{value:"mac",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install wechaty-puppet-mock\nexport WECHATY_PUPPET=wechaty-puppet-mock\nnpm start\n"))),(0,r.kt)(l.Z,{value:"windows",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install wechaty-puppet-mock\nset WECHATY_PUPPET=wechaty-puppet-mock\nnpm start\n")))),(0,r.kt)("h2",{id:"mocker-and-environment"},"Mocker and Environment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n  PuppetMock,\n  Mocker,\n  SimpleEnvironment,\n}                     from 'wechaty-puppet-mock'\n\nconst mocker = new Mocker()\nmocker.use(SimpleEnvironment())\n\nconst puppet = new PuppetMock({ mocker })\nconst wechaty = new Wechaty({ puppet })\n\nwechaty.start()\n\n// The Mocker will start perform the SimpleEnvironment...\n")),(0,r.kt)("p",null,"See: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-puppet-mock/blob/master/src/mock/environment.ts"},"SimpleEnvironment"),"."),(0,r.kt)("h2",{id:"api-reference"},"API Reference"),(0,r.kt)("h3",{id:"mocker"},"Mocker"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { Wechaty }  from 'wechaty'\nimport { \n  PuppetMock,\n  mock,\n}                   from 'wechaty-puppet-mock'\n\nconst mocker = new mock.Mocker()\nconst puppet = new PuppetMock({ mocker })\nconst bot = new Wechaty({ puppet })\n\nawait bot.start()\n\nmocker.scan('https://github.com/wechaty', 1)\n\nconst user = mocker.createContact()\nmocker.login(user)\n\nconst contact = mocker.createContact()\nconst room = mocker.createRoom()\n\nuser.say('Hello').to(contact)\ncontact.say('World').to(user)\n")),(0,r.kt)("h2",{id:"helper-utilities"},"Helper Utilities"),(0,r.kt)("h3",{id:"stateswitch"},"StateSwitch"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"this.state.on('pending')\nthis.state.on(true)\nthis.state.off('pending')\nthis.state.off(true)\n\nawait this.state.ready('on')\nawait this.state.ready('off')\n\n")),(0,r.kt)("h3",{id:"memorycard"},"MemoryCard"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"await memory.set('config', { id: 1, key: 'xxx' })\nconst config = await memory.get('config')\nconsole.log(config)\n// Output: { id: 1, key: 'xxx' }\n")),(0,r.kt)("h2",{id:"example-unit-testing-for-math_master-game"},"Example: unit testing for ",(0,r.kt)("inlineCode",{parentName:"h2"},"math_master")," game"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"math_master")," is a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-vorpal-contrib"},"Wechaty Vorpal Contrib")," command which is a simple game for answering math questions that asked by a Wechaty bot."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://raw.githubusercontent.com/wechaty/wechaty-vorpal-contrib/HEAD/docs/images/math-master.png",alt:"Math Master Wechaty Game"})),(0,r.kt)("p",null,"You can read the unit testing script at: ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/wechaty/wechaty-vorpal-contrib/blob/master/src/contrib/math_master/math_master.spec.ts"},"https://github.com/wechaty/wechaty-vorpal-contrib/blob/master/src/contrib/math_master/math_master.spec.ts")),(0,r.kt)("h2",{id:"history"},"History"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Milestones for master branch:")),(0,r.kt)("h3",{id:"v025-july-13-2020"},"v0.25 (July 13, 2020)"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Rename MockXXX to XXXMock for keep the consistent naming style with PuppetMock."),(0,r.kt)("li",{parentName:"ol"},"Export mock namespace and move all related modules under it.")),(0,r.kt)("h3",{id:"v022-june-4-2020"},"v0.22 (June 4, 2020)"),(0,r.kt)("p",null,"Mocker Released. Mocker is a manager for controlling the behavior of the Puppet activities."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Add MockContact, MockRoom, and MockMessage for Mockers"),(0,r.kt)("li",{parentName:"ol"},"Add MockEnvironment for mocking the server behaviors."),(0,r.kt)("li",{parentName:"ol"},"Support Wechaty#Contact.find() from the mocker.createContacts()."),(0,r.kt)("li",{parentName:"ol"},"Support Wechaty#Room.find() from the mocker.createRooms()."),(0,r.kt)("li",{parentName:"ol"},"Support message event for talker, listener, and room of MockMessage.")),(0,r.kt)("h3",{id:"v001-jun-27-2018"},"v0.0.1 (Jun 27, 2018)"),(0,r.kt)("p",null,"Initial version."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"PuppetMock")," is a skelton Puppet without do anything, it will make testing easy when developing Wechaty."),(0,r.kt)("h2",{id:"maintainers"},"Maintainers"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://wechaty.js.org/contributors/huan"},"@huan"))))}h.isMDXComponent=!0}}]);